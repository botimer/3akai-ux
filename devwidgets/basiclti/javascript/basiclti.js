/*
 * Licensed to the Sakai Foundation (SF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The SF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

/*global $, sdata, Config, addBinding */

var sakai = sakai || {};

sakai.basiclti = function(tuid,placement,showSettings){
	var currentSubContainer = ""; // The current subcontainer (get/set)
	var json = false; // json object
	var me; // me object
	var me_json; // json me object
	var rootel = $("#" + tuid);

    var settingsTemplate = "basiclti_settings";

    var toolContainer = '#basiclti_tool_container';
	
	/**
	 * Reset the values of the json object
	 */
	var resetValues = function(){
		json = {};
	};
	
	/**
	 * Get the me object
	 * @param {Boolean} refresh Refresh the me object or not
	 */
	var getMe = function(){
		me = sdata.me;
		me_json = me.profile;	
	};
	
		
	/**
	 * Render the template of a container
	 * @param {String} container Container that will be rendered
	 */
	var renderTemplate = function(container){
        if (showSettings) {
            $('#basiclti_settings_container', rootel).html($.Template.render(settingsTemplate, json)).show();
            $('button[name=save_settings]', rootel).click(function(e) {
                var settings = {
                    ltiurl: $('[name=ltiurl]', rootel).val(),
                    ltikey: $('[name=ltikey]', rootel).val(),
                    ltisecret: $('[name=ltisecret]', rootel).val(),
                    frame_height: $('[name=frame_height]', rootel).val(),
                    debug: $('[name=debug]:checked', rootel).length == 1,
                    release_names: $('[name=release_names]:checked', rootel).length == 1,
                    release_principal_name: $('[name=release_principal_name]:checked', rootel).length == 1,
                    release_email: $('[name=release_email]:checked', rootel).length == 1,
                    custom_params: $('[name=custom_params]', rootel).val(),
                    xml_settings: $('[name=xml_settings]', rootel).val()
                };
                settings['sling:resourceType'] = 'sakai/basiclti';
                var settingsJson = $.toJSON(settings);
                var saveComplete = function() { sdata.container.informFinish(tuid); };

                // normal widget properties URL for sdata.WidgetPreference.save technique
                //var saveUrl = Config.URL.SDATA_FETCH_BASIC_URL.replace(/__PLACEMENT__/, placement).replace(/__TUID__/, tuid);
                //sdata.widgets.WidgetPreference.save(saveUrl, "basiclti", settingsJson, saveComplete);

                // we're posting directly to avoid the nt:file from using sdata save (for now)
                var saveUrl = Config.URL.SDATA_FETCH_URL.replace(/__PLACEMENT__/, placement).replace(/__TUID__/, tuid).replace(/__NAME__/, "basiclti");
                $.ajax({
                    type: 'POST',
                    url: saveUrl,
                    data: settings,
                    dataType: 'html',
                    success: function(data) {
                        sdata.container.informFinish(tuid);
                    }
                });
                e.preventDefault();
            });
        }
        else {

            // The sakai/basiclti nodes can be requested with .html or .json extensions.
            // The json rendering returns data that can be used to assemble a form as in the comment below.
            // We are currently using the .html rendering, which includes the auto-posting form, generated by the server

            var launchDataUrl = Config.URL.SDATA_FETCH_URL.replace(/__PLACEMENT__/, placement).replace(/__TUID__/, tuid).replace(/__NAME__/, "basiclti") + '.launch.html';
            var fr = $('<iframe src="' + launchDataUrl + '" id="basiclti_launch_frame" height="' + json.frame_height + '" style="border: 0; width: 100%;"></iframe>');
            $(toolContainer).append(fr);
            $(toolContainer).show();

            // JSON launch form creation
            /*
            var launchDataUrl = Config.URL.SDATA_FETCH_URL.replace(/__PLACEMENT__/, placement).replace(/__TUID__/, tuid).replace(/__NAME__/, "basiclti") + '.launch.json';
            $.getJSON(launchDataUrl, function(data) {
                var url = data.launchURL;
                var html = '<form id="basiclti_launch" method="post" action="' + url  + '">';
                var pd = data.postData;
                //pd.basiclti_submit = json.basiclti_submit;
                for (k in pd) {
                    if (k != 'basiclti_submit')
                        //html += '<input type="hidden" name="' + k + '" value="' + pd[k] + '" />';
                        html += '<input type="text" name="' + k + '" value="' + pd[k] + '" />';
                }
                html += '<input type="submit" id="basiclti_submit" name="' + 'basiclti_submit' + '" value="' + pd['basiclti_submit'] + '" />';
                html += '</form>';
                html += '<script type="text/javascript">document.getElementById("basiclti_submit").style.display="none";';
                html += 'document.basiclti_launch.submit();</script>';

                switch (container) {
                    case "main":
                        var fr = $('<iframe src="/devwidgets/basiclti/basicltiform.html" id="basiclti_launch_frame" height="800" width="640" border="0"></iframe>');
                        $(fr).bind('load', function(evt) {
                            $('#launch_form', evt.target.contentWindow.document).append(html);
                        });
                        $(toolContainer).append(fr);
                        $(toolContainer).show();
                        break;
                }
            });
            */
        }
	};

	/**
	 * Function that will be launched if the widget is loaded
	 */
	var init = function(){
		getMe();
		resetValues();
        var s = Config.URL.SDATA_FETCH_URL.replace(/__PLACEMENT__/, placement).replace(/__TUID__/, tuid).replace(/__NAME__/, "basiclti") + '.json';
        json = {
            ltiurl: '',
            ltikey: '',
            ltisecret: '',
            frame_height: 200,
            //launch_presentation_height: 800,
            debug: false,
            release_names: false,
            release_principal_name: false,
            release_email: false,
            xml_settings: '',
            custom_params: ''
        };
        $.ajax({
            url: s,
            cache: false,
            success: function(data){
                $.extend(json, $.evalJSON(data));
            },
            error: function(xhr, textStatus, thrownError) {
                //first pass, we don't have settings, so ignore
            },
            complete: function(xhr, textStatus) {
                json.foo = 'bar';
                renderTemplate("main");
                $("#basiclti_main_container").show();
            }
        });
	};
	init();
};

sdata.widgets.WidgetLoader.informOnLoad("basiclti");
